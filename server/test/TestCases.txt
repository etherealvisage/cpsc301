Test Cases



Authentication:
-Login
	+Non existent user      ---> onResult([state]) = string "notFound" 
		Authentication.prototype.login("NotExisting","password",Console.Log([state]));
		
	+Null user              ---> string "notFound"
		Authentication.prototype.login(null,"password",Console.Log([state]));
		
	+Wrong password         ---> string "failed"
		Authentication.prototype.login("Mike","notthepassword",Console.Log([state]));
		
	+Wrong password (empty) ---> string "failed"
		Authentication.prototype.login("Mike","",Console.Log([state]));
		
	+Wrong password (null)  ---> string "failed"
		Authentication.prototype.login("Mike",null,Console.Log([state]));
		
	+Wrong password (really long password)---> string "failed"
		Authentication.prototype.login("Mike","",Console.Log([state]));       /*insert war and peace sample when testing, left out for visibility*/
		
	+Wrong password (other users password)---> string "failed"
		Authentication.prototype.login("Mike","banjo",Console.Log([state]));	//assuming the user Evan has the pasword banjo
		
	+XSS (recursive call of a successful password) ---> string ?
		Authentication.prototype.login(Authentication.prototype.login("Mike","banjo",Console.Log([state])),"password",Console.Log([state])); 
		
	+Right password          ---> state: "success", username: 
  	Authentication.prototype.login("Mike","password",Console.Log([state]));
	
// NOT READY TO TEST 
Creating new user:
  +New User               ---> ?
      Authentication.prototype.createUser = function(Johnathan, Johnathan, password, Doctor, onResult);
  +Already Created User ->    
      Authentication.prototype.createUser = function(Mike, Mike, password, admin, onResult);
      
Password Hashing:



// TODO -> create test database of memos
Memos:
  +List non-existant memo ---> error?
      Memo.list = function(abcd1234, null);
  +List non-existant memo ---> error?
      Memo.list = function(null,null);
  +List memo              ---> Return proper memo            
      Memo.list = function(1,function(state){ assert.equals("abcde", state)});   // THIS MUST BE CHANGED.. Returns rows instead of simple text    
  
//Memo.prototype.create = function(params, onResult)   
 var params = {
  title:
  uid:
  content:
} 
  
  +Create blank memo      ---> error
      Memo.create(params,null)
  +Create memo with no title ---> error
      Memo.create(params,null)      
  +
   
      
      
